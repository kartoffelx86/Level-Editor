/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package platformereditor;

import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.awt.event.MouseEvent;
import javax.swing.JPanel;

/**
 *
 * @author leonb
 */
public class EditorGUI extends javax.swing.JFrame {

    Dimension tsize;
    Editor editorobj;

    /**
     * Creates new form NewJFrame
     */
    EditorGUI(Editor editor) {
        editorobj = editor;
        initComponents();
        btngRcklMenu.add(rbmitAdd);
        btngRcklMenu.add(rbmitDel);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        rcklMenu = new javax.swing.JPopupMenu();
        rbmitAdd = new javax.swing.JRadioButtonMenuItem();
        rbmitDel = new javax.swing.JRadioButtonMenuItem();
        btngRcklMenu = new javax.swing.ButtonGroup();
        pnEditor = new EditorPanel();
        mbMenu = new javax.swing.JMenuBar();
        miDatei = new javax.swing.JMenu();
        mitNeu = new javax.swing.JMenuItem();
        mitOeffne = new javax.swing.JMenuItem();
        mitSave = new javax.swing.JMenuItem();
        sep1 = new javax.swing.JPopupMenu.Separator();
        reRender = new javax.swing.JMenuItem();
        miWindows = new javax.swing.JMenu();
        mitOpenProps = new javax.swing.JMenuItem();
        miExtra = new javax.swing.JMenu();
        mitInfo = new javax.swing.JMenuItem();

        rbmitAdd.setSelected(true);
        rbmitAdd.setText("Hinzufügen");
        rcklMenu.add(rbmitAdd);

        rbmitDel.setSelected(true);
        rbmitDel.setText("Entfernen");
        rcklMenu.add(rbmitDel);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new java.awt.GridLayout(1, 0));

        pnEditor.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pnEditorMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout pnEditorLayout = new javax.swing.GroupLayout(pnEditor);
        pnEditor.setLayout(pnEditorLayout);
        pnEditorLayout.setHorizontalGroup(
            pnEditorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 508, Short.MAX_VALUE)
        );
        pnEditorLayout.setVerticalGroup(
            pnEditorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 286, Short.MAX_VALUE)
        );

        getContentPane().add(pnEditor);

        mbMenu.setBackground(new java.awt.Color(204, 204, 204));

        miDatei.setText("Datei");

        mitNeu.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        mitNeu.setText("Neu");
        miDatei.add(mitNeu);

        mitOeffne.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        mitOeffne.setText("Öffnen");
        mitOeffne.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mitOeffneActionPerformed(evt);
            }
        });
        miDatei.add(mitOeffne);

        mitSave.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        mitSave.setText("Speichern");
        mitSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mitSaveActionPerformed(evt);
            }
        });
        miDatei.add(mitSave);
        miDatei.add(sep1);

        reRender.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F5, 0));
        reRender.setText("Aktualisieren");
        reRender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reRenderActionPerformed(evt);
            }
        });
        miDatei.add(reRender);

        mbMenu.add(miDatei);

        miWindows.setText("Fenster");

        mitOpenProps.setText("Eigenschaften");
        mitOpenProps.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mitOpenPropsActionPerformed(evt);
            }
        });
        miWindows.add(mitOpenProps);

        mbMenu.add(miWindows);

        miExtra.setText("Extra");

        mitInfo.setText("Info");
        miExtra.add(mitInfo);

        mbMenu.add(miExtra);

        setJMenuBar(mbMenu);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mitOeffneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mitOeffneActionPerformed
        editorobj.openClicked();
    }//GEN-LAST:event_mitOeffneActionPerformed

    public void setPanelSize(Dimension size) {
        pnEditor.setPreferredSize(size);
        this.pack();
    }

    public void reRender() {
        pnEditor.repaint();
        System.out.println("" + pnEditor.getSize().height + "," + pnEditor.getSize().width);
    }
    private void reRenderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reRenderActionPerformed
        reRender();
    }//GEN-LAST:event_reRenderActionPerformed

    private void pnEditorMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pnEditorMouseClicked
        editorobj.panelClicked(evt);
    }//GEN-LAST:event_pnEditorMouseClicked

    private void mitOpenPropsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mitOpenPropsActionPerformed
        editorobj.openProps();
    }//GEN-LAST:event_mitOpenPropsActionPerformed

    private void mitSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mitSaveActionPerformed
        editorobj.saveClicked();
    }//GEN-LAST:event_mitSaveActionPerformed

    public void showRightClickMenu(MouseEvent evt) {
        rcklMenu.show(this, evt.getX(), evt.getY());
    }
    
    public int getRightClickMenuStatus(){
        if(rbmitAdd.isSelected()){
            return 1;
        }
        if(rbmitDel.isSelected()){
            return 2;
        }
        return 0;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup btngRcklMenu;
    private javax.swing.JMenuBar mbMenu;
    private javax.swing.JMenu miDatei;
    private javax.swing.JMenu miExtra;
    private javax.swing.JMenu miWindows;
    private javax.swing.JMenuItem mitInfo;
    private javax.swing.JMenuItem mitNeu;
    private javax.swing.JMenuItem mitOeffne;
    private javax.swing.JMenuItem mitOpenProps;
    private javax.swing.JMenuItem mitSave;
    private javax.swing.JPanel pnEditor;
    private javax.swing.JRadioButtonMenuItem rbmitAdd;
    private javax.swing.JRadioButtonMenuItem rbmitDel;
    private javax.swing.JPopupMenu rcklMenu;
    private javax.swing.JMenuItem reRender;
    private javax.swing.JPopupMenu.Separator sep1;
    // End of variables declaration//GEN-END:variables

    class EditorPanel extends JPanel {

        @Override
        protected void paintComponent(Graphics g) {
            super.paintComponent(g);
            Graphics2D g2d = (Graphics2D) g;
            g2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
            editorobj.Render(g2d);
        }

    }

}
